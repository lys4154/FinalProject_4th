<?xml version="1.0" encoding="UTF-8"?>

	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.dao.BundleDAO">

<!-- 후원 상세 - 꾸러미 -->
<select id="getBundle" parameterType="java.util.List" resultType="bundledto">
	select * from bundle where bundle_seq in
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
</select>

<select id="getBundleWithPseq">
	select bundle_seq from bundle where project_seq = #{project_seq}
</select>

<!-- bundle, itemlist, item, option 조인 후 bundleDTO 내에 리스트로 -->
<resultMap type="bundledto" id="bundleMap">
	<id property="bundle_seq" column="bundle_seq"/>
	<result property="project_seq" column="project_seq"/>
	<result property="bundle_name" column="bundle_name"/>
	<result property="bundle_price" column="bundle_price"/>
	<collection property="itemListDTOList" resultMap="itemListMap"/>
</resultMap>
<resultMap type="itemlistdto" id="itemListMap">
	<id property="item_list_seq" column="item_list_seq"/>
	<result property="item_seq" column="item_seq"/>
	<result property="bundle_seq" column="bundle_seq"/>
	<result property="item_count" column="item_count"/>
	<association property="itemDTO" resultMap="itemMap"/>
</resultMap>
<resultMap type="itemdto" id="itemMap">
	<id property="item_seq" column="item_seq"/>
	<result property="project_seq" column="project_seq"/>
	<result property="item_name" column="item_name"/>
	<collection property="optionDTOList" resultMap="itemOptionMap"/>
</resultMap>
<resultMap type="itemoptiondto" id="itemOptionMap">
	<id property="item_option_seq" column="item_option_seq"/>
	<result property="item_seq" column="item_seq"/>
	<result property="item_option_name" column="item_option_name"/>
</resultMap>
<select id="getBundleList" parameterType="list" resultMap="bundleMap">
	select bundle_name, bundle_price, b.bundle_seq, item_list_seq, l.item_seq , item_count, b.project_seq,
		item_name, item_option_seq, item_option_name, item_list_seq
	from item_list l
	join item i on l.item_seq = i.item_seq
	left join item_option o on l.item_seq = o.item_seq
	join bundle b on l.bundle_seq = b.bundle_seq
	where 
	<foreach collection="bundleSeqList" item="item" separator=" or ">
		 b.bundle_seq = #{item}
	</foreach>
	<if test="bundleSeqList == null or bundleSeqList.size == 0">
       b.bundle_seq = 0
    </if>

	 order by bundle_seq asc ,item_list_seq asc, item_seq asc;
</select>



<!-- 선물저장(Bundle) -->
<select id="getProject_seq" parameterType="int" resultType="int">
	select project_seq from project where member_seq=#{member_seq} order by project_seq desc limit 0,1 
</select>

<insert id="insertBundle" parameterType="project.dto.BundleDTO">
	insert into bundle (project_seq, bundle_name, bundle_price)
	values (#{project_seq}, #{bundle_name}, #{bundle_price})
</insert>
<insert id="insertBundleReturnSeq" parameterType="project.dto.BundleDTO" useGeneratedKeys="true" keyProperty="bundle_seq">
	insert into bundle (project_seq, bundle_name, bundle_price)
	values (#{project_seq}, #{bundle_name}, #{bundle_price})
</insert>

</mapper>	


